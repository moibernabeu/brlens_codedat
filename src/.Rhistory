# Loading sampling function
source('event_mcmc_sampling_function.R')
source('mcmc_analysis_funs.R')
events <- c('vert', 'met')
# Loading sampling function
source('event_mcmc_sampling_function.R')
source('mcmc_analysis_funs.R')
require(ggplot2)
require(ggpubr)
require(coda)
theme_set(theme_bw())
# Loading data
load('../data/event_dist.RData')
events <- c('vert', 'met')
event <- events[1]
# Executing sampling
system.time(
mcmcout <- mcmcfun(y = evdat[, paste(event, 'ndist', sep = '_')],
nchains = 3, niter = 1000,
thin = 3, unifmax = 100, oname = event)
)
mcmcout <- vert_mcmc
mcmcout <- mcmcfun(y = evdat[, paste(event, 'ndist', sep = '_')],
nchains = 3, niter = 1000,
thin = 3, unifmax = 100, oname = event)
# Executing sampling
system.time(
mcmcout <- mcmcfun(y = evdat[0:1000, paste(event, 'ndist', sep = '_')],
nchains = 3, niter = 1000,
thin = 3, unifmax = 100, oname = event)
)
setwd("/data/moises/research/brlens/computations/src_refined")
# Loading sampling function
source('event_mcmc_sampling_function.R')
# Loading sampling function
source('event_mcmc_sampling_function.R')
# Loading sampling function
source('mcmc_event_sampling_function.R')
source('mcmc_analysis_funs.R')
require(ggplot2)
require(ggpubr)
require(coda)
theme_set(theme_bw())
# Loading data
load('../outputs/event_dist.RData')
events <- c('vert', 'met')
event <- events[1]
# Executing sampling
system.time(
mcmcout <- mcmcfun(y = evdat[0:1000, paste(event, 'ndist', sep = '_')],
nchains = 3, niter = 1000,
thin = 3, unifmax = 100, oname = event)
)
# Loading data
load('../test/event_dist.RData')
# Executing sampling
system.time(
mcmcout <- mcmcfun(y = evdat[0:1000, paste(event, 'ndist', sep = '_')],
nchains = 3, niter = 1000,
thin = 3, unifmax = 100, oname = event)
)
plot(mcmcout)
post_list <- mcmc.list(mcmcout)
post_df <- as.data.frame(ggs(post_list))
post_df$Chain <- as.factor(post_df$Chain)
hists <- ggplot(post_df, aes(x = value, colour = Chain)) +
geom_density() +
facet_wrap(~Parameter, scales = 'free', ncol = 1) +
labs(title = paste('yedat', event))
traces <- ggplot(post_df, aes(x = Iteration, y = value, colour = Chain)) +
geom_line(size = 0.2, aes(lty = Chain)) +
facet_wrap(~Parameter, scales = 'free', ncol = 1) +
labs(title = paste('yedat', event))
ggarrange(hists, traces, align = 'hv', common.legend = TRUE, legend = 'bottom')
diagdf <- as.data.frame(ggs_diagnostics(post_df))
summ <- summary(mcmcout)
summdf <- cbind(summ$statistics[, 1:2],
'R' = diagdf[which(diagdf$Diagnostic == 'Rhat'), 4],
'Effective size' = effectiveSize(mcmcout))
summdf
post_ac <- get_ac_df(post_df, 100)
ggplot(post_ac, aes(x = Lag, y = Autocorrelation, colour = Chain)) +
geom_line() +
facet_grid(Parameter ~ Chain) +
labs(title = )
ggplot(post_ac, aes(x = Lag, y = Autocorrelation, colour = Chain)) +
geom_line() +
facet_grid(Parameter ~ Chain) +
labs(title = event)
